{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/Empresa/EmpresaItem.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport uuid from 'uuid';\nimport { useQuery, useMutation, useSubscription } from \"@apollo/react-hooks\";\nimport queries from 'queries/Empresas.jsx';\nimport { gql } from 'apollo-boost';\nconst getEmpresas = gql(_templateObject(), queries.getEmpresas);\n\nconst empresaitem = () => React.createElement(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"item\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}));\n\nconst item = props => {\n  // const datos= this.props.variables;\n  const _useQuery = useQuery(getEmpresas),\n        data = _useQuery.data,\n        error = _useQuery.error,\n        loading = _useQuery.loading;\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  ;\n\n  if (error) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Error! \", error.message);\n  }\n\n  ;\n  return React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, data.empresas.map(element => React.createElement(\"tr\", {\n    key: uuid(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    key: element._id,\n    className: \"text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, element.nombre), React.createElement(\"th\", {\n    key: element._id,\n    className: \"text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, element.correo), React.createElement(\"th\", {\n    key: element._id,\n    className: \"text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, element.canton), React.createElement(\"th\", {\n    key: element._id,\n    className: \"text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, element.provincia))));\n};\n\nexport default empresaitem;","map":{"version":3,"sources":["/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/Empresa/EmpresaItem.jsx"],"names":["React","uuid","useQuery","useMutation","useSubscription","queries","gql","getEmpresas","empresaitem","item","props","data","error","loading","message","empresas","map","element","_id","nombre","correo","canton","provincia"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,eAAhC,QAAuD,qBAAvD;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,WAAW,GAAGD,GAAH,oBAASD,OAAO,CAACE,WAAjB,CAAjB;;AAEA,MAAMC,WAAW,GAAC,MAEhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFF;;AAQA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAGtB;AAHsB,oBAKWR,QAAQ,CAACK,WAAD,CALnB;AAAA,QAKdI,IALc,aAKdA,IALc;AAAA,QAKRC,KALQ,aAKRA,KALQ;AAAA,QAKDC,OALC,aAKDA,OALC;;AAOtB,MAAIA,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAAA;;AACD,MAAID,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACE,OAAnB,CAAP;AACD;;AAAA;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IACxB;AAAI,IAAA,GAAG,EAAEhB,IAAI,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAEgB,OAAO,CAACC,GAAjB;AAAsB,IAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,MADX,CADF,EAKE;AAAI,IAAA,GAAG,EAAEF,OAAO,CAACC,GAAjB;AAAsB,IAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACG,MADX,CALF,EASE;AAAI,IAAA,GAAG,EAAEH,OAAO,CAACC,GAAjB;AAAsB,IAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACI,MADX,CATF,EAaE;AAAI,IAAA,GAAG,EAAEJ,OAAO,CAACC,GAAjB;AAAsB,IAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACK,SADX,CAbF,CADD,CADH,CADF;AAuBD,CArCD;;AAuCA,eAAed,WAAf","sourcesContent":["import React from 'react';\nimport uuid from 'uuid';\nimport { useQuery, useMutation, useSubscription } from \"@apollo/react-hooks\";\nimport queries from 'queries/Empresas.jsx';\nimport { gql } from 'apollo-boost'\n\nconst getEmpresas = gql`${queries.getEmpresas}`;\n\nconst empresaitem=()=>(\n\n  <tbody>\n    <item></item>\n  </tbody>\n\n)\n\nconst item = (props) => {\n\n\n  // const datos= this.props.variables;\n\n  const { data, error, loading } = useQuery(getEmpresas);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  };\n  if (error) {\n    return <div>Error! {error.message}</div>;\n  };\n\n  return (\n    <tbody>\n      {data.empresas.map(element => (\n        <tr key={uuid()}>\n          <th key={element._id} className=\"text-right\">\n            {element.nombre}\n          </th>\n\n          <th key={element._id} className=\"text-right\">\n            {element.correo}\n          </th>\n\n          <th key={element._id} className=\"text-right\">\n            {element.canton}\n          </th>\n\n          <th key={element._id} className=\"text-right\">\n            {element.provincia}\n          </th>\n        </tr>\n      ))}\n    </tbody>\n  )\n};\n\nexport default empresaitem;"]},"metadata":{},"sourceType":"module"}