{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/gmarin/Software/GraphQL-React/graphql-react/TollQuick/FrontEnd(React-Apollo)/now-ui-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/gmarin/Software/GraphQL-React/graphql-react/TollQuick/FrontEnd(React-Apollo)/now-ui-dashboard-react-master/src/views/UserEdit.jsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/*!\n\n=========================================================\n* Now UI Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { Row } from \"reactstrap\";\nimport { gql } from 'apollo-boost';\nimport PanelHeader from \"components/PanelHeader/PanelHeader.jsx\";\nimport EmpresaDetalles from \"components/Empresa/EmpresaDetalles.jsx\";\nimport queries from 'queries/Empresas.jsx';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\nconst UserEdit = props => {\n  const Id = props.match.params.empresaid;\n  const getEmpresa = gql(_templateObject(), queries.getEmpresa);\n  const updateEmpresa = gql(_templateObject2(), queries.updateEmpresa);\n\n  const GetEmpresa = ({\n    Id\n  }) => {\n    debugger;\n\n    const _useQuery = useQuery(getEmpresa, {\n      variables: {\n        Id\n      }\n    }),\n          loading = _useQuery.loading,\n          error = _useQuery.error,\n          data = _useQuery.data;\n\n    const empresa = data === undefined ? [] : data.empresa; //No se puede guardar en un state directamente, se tiene que enviar a otro componente y agregarselo al state\n\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"loading...\");\n    if (error) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, error.message);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(EmpresaDetalles, {\n      query: updateEmpresa,\n      title: 'Editar Empresa',\n      ident: Id,\n      datos: empresa,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(PanelHeader, {\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(GetEmpresa, {\n    Id: Id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))));\n};\n\nexport default UserEdit;","map":{"version":3,"sources":["/home/gmarin/Software/GraphQL-React/graphql-react/TollQuick/FrontEnd(React-Apollo)/now-ui-dashboard-react-master/src/views/UserEdit.jsx"],"names":["React","useState","useEffect","Fragment","Row","gql","PanelHeader","EmpresaDetalles","queries","useQuery","useMutation","UserEdit","props","Id","match","params","empresaid","getEmpresa","updateEmpresa","GetEmpresa","variables","loading","error","data","empresa","undefined","message"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;AAiBA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,QAAMC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,SAA9B;AACA,QAAMC,UAAU,GAAGZ,GAAH,oBAASG,OAAO,CAACS,UAAjB,CAAhB;AACA,QAAMC,aAAa,GAAGb,GAAH,qBAASG,OAAO,CAACU,aAAjB,CAAnB;;AAEA,QAAMC,UAAU,GAAG,CAAC;AAAEN,IAAAA;AAAF,GAAD,KAAY;AAE3B;;AAF2B,sBAGMJ,QAAQ,CAACQ,UAAD,EAAa;AAAEG,MAAAA,SAAS,EAAE;AAAEP,QAAAA;AAAF;AAAb,KAAb,CAHd;AAAA,UAGnBQ,OAHmB,aAGnBA,OAHmB;AAAA,UAGVC,KAHU,aAGVA,KAHU;AAAA,UAGHC,IAHG,aAGHA,IAHG;;AAI3B,UAAMC,OAAO,GAAGD,IAAI,KAAKE,SAAT,GAAqB,EAArB,GAA0BF,IAAI,CAACC,OAA/C,CAJ2B,CAI6B;;AAExD,QAAIH,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACI,OAAV,CAAP;AAEX,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAER,aAAxB;AAAuC,MAAA,KAAK,EAAE,gBAA9C;AAAgE,MAAA,KAAK,EAAEL,EAAvE;AAA2E,MAAA,KAAK,EAAEW,OAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH,GAdD;;AAgBA,SACI,0CACI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEX,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFJ,CADJ;AAUH,CAhCD;;AAkCA,eAAeF,QAAf","sourcesContent":["/*!\n\n=========================================================\n* Now UI Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { Row } from \"reactstrap\";\nimport { gql } from 'apollo-boost'\nimport PanelHeader from \"components/PanelHeader/PanelHeader.jsx\";\nimport EmpresaDetalles from \"components/Empresa/EmpresaDetalles.jsx\";\nimport queries from 'queries/Empresas.jsx';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\n\nconst UserEdit = (props) => {\n\n    const Id = props.match.params.empresaid;\n    const getEmpresa = gql`${queries.getEmpresa}`;\n    const updateEmpresa = gql`${queries.updateEmpresa}`;\n\n    const GetEmpresa = ({ Id }) => {\n\n        debugger\n        const { loading, error, data } = useQuery(getEmpresa, { variables: { Id } });\n        const empresa = data === undefined ? [] : data.empresa; //No se puede guardar en un state directamente, se tiene que enviar a otro componente y agregarselo al state\n\n        if (loading) return <p>loading...</p>;\n        if (error) return <p>{error.message}</p>;\n\n        return (\n            <React.Fragment>\n                <EmpresaDetalles query={updateEmpresa} title={'Editar Empresa'} ident={Id} datos={empresa} />\n            </React.Fragment>\n        )\n    }\n\n    return (\n        <>\n            <PanelHeader size=\"sm\" />\n            <div className=\"content\">\n                <Row>\n                    <GetEmpresa Id={Id} />\n                </Row>\n            </div>\n        </>\n    );\n}\n\nexport default UserEdit;\n"]},"metadata":{},"sourceType":"module"}