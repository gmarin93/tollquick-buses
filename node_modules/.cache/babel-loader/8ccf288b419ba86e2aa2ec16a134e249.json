{"ast":null,"code":"import _objectSpread from \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/views/UserEdit.jsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/*!\n\n=========================================================\n* Now UI Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState, useEffect, Fragment } from 'react'; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, Row, Col } from \"reactstrap\";\nimport { gql } from 'apollo-boost'; // core components\n\nimport PanelHeader from \"components/PanelHeader/PanelHeader.jsx\";\nimport EmpresaDetalles from \"components/Empresa/EmpresaDetalles.jsx\";\nimport queries from 'queries/Empresas.jsx';\nimport { Query } from \"react-apollo\";\nimport uuid from 'uuid';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\nconst UserEdit = props => {\n  const getEmpresa = gql(_templateObject(), queries.getEmpresa);\n  const updateEmpresa = gql(_templateObject2(), queries.updateEmpresa);\n  const Initialstate = {\n    nombre: '',\n    usuario: '',\n    correo: '',\n    provincia: '',\n    canton: '',\n    distrito: ''\n  };\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        empresa = _useState2[0],\n        grdEmpresa = _useState2[1]; // const DataEmpresa={\n  //     nombre: '',\n  //     usuario: '',\n  //     correo: '',\n  //     provincia: '',\n  //     canton: '',\n  //     distrito: '',\n  // }\n\n\n  const handleChange = e => {\n    grdEmpresa(_objectSpread({}, empresa, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const GetEmpresa = ({\n    id\n  }) => {\n    const _useQuery = useQuery(getEmpresa, {\n      variables: {\n        id\n      }\n    }),\n          data = _useQuery.data,\n          error = _useQuery.error,\n          loading = _useQuery.loading;\n\n    console.log(\"Esto es\" + data);\n    if (data != undefined) return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(EmpresaDetalles, {\n      onChange: handleChange,\n      query: updateEmpresa,\n      title: 'Editar Empresa',\n      ident: id,\n      datos: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));else return;\n  }; // render() {\n\n\n  const Id = props.match.params.empresaid;\n  return React.createElement(React.Fragment, null, React.createElement(PanelHeader, {\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(GetEmpresa, {\n    id: Id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), \")\"))); // }\n};\n\nexport default UserEdit;","map":{"version":3,"sources":["/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/views/UserEdit.jsx"],"names":["React","useState","useEffect","Fragment","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","Row","Col","gql","PanelHeader","EmpresaDetalles","queries","Query","uuid","useQuery","useMutation","UserEdit","props","getEmpresa","updateEmpresa","Initialstate","nombre","usuario","correo","provincia","canton","distrito","empresa","grdEmpresa","handleChange","e","target","name","value","GetEmpresa","id","variables","data","error","loading","console","log","undefined","Id","match","params","empresaid"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Now UI Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState, useEffect, Fragment } from 'react';\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Row,\n    Col\n} from \"reactstrap\";\nimport { gql } from 'apollo-boost'\n// core components\nimport PanelHeader from \"components/PanelHeader/PanelHeader.jsx\";\nimport EmpresaDetalles from \"components/Empresa/EmpresaDetalles.jsx\";\nimport queries from 'queries/Empresas.jsx';\nimport { Query } from \"react-apollo\"\nimport uuid from 'uuid';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\n\n\n\nconst UserEdit=(props)=> {\n    \n    const getEmpresa = gql`${queries.getEmpresa}`;\n    const updateEmpresa = gql`${queries.updateEmpresa}`;\n    const Initialstate = {\n        nombre: '',\n        usuario: '',\n        correo: '',\n        provincia: '',\n        canton: '',\n        distrito: '',\n    }\n\n    const [empresa,grdEmpresa]=useState({});\n\n    // const DataEmpresa={\n    //     nombre: '',\n    //     usuario: '',\n    //     correo: '',\n    //     provincia: '',\n    //     canton: '',\n    //     distrito: '',\n    // }\n\n    const handleChange = e => {\n        grdEmpresa({\n            ... empresa,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n   const GetEmpresa = ({id}) => {\n\n        const { data, error, loading }  = useQuery(getEmpresa,{variables:{id}});\n    console.log(\"Esto es\"+data);\n\n    if(data!=undefined)\n        return (\n            <React.Fragment>\n                <EmpresaDetalles onChange={handleChange} query={updateEmpresa} title={'Editar Empresa'} ident={id} datos={data} />\n            </React.Fragment>\n        )\n        else \n            return\n    }\n\n    // render() {\n\n        const Id = props.match.params.empresaid;\n\n        return (\n            <>\n                <PanelHeader size=\"sm\" />\n                <div className=\"content\">\n                    <Row>\n                        {/* <Query key={uuid()} query={getEmpresa} variables={{ Id }} >\n                            {({ loading, error, data }) => { */}\n\n                                {/* const datos = data.empresa === undefined ? [] : data.empresa;\n\n                                if (loading) return <p>loading...</p>;\n                                if (error) return <p>{error.message}</p>;\n\n                                return ( */}\n                                     {/* <React.Fragment>\n                                         <EmpresaDetalles onChange={this.handleChange} query={updateEmpresa} title={'Editar Empresa'} ident={Id} datos={datos} />\n                                     </React.Fragment> */}\n                                    <GetEmpresa id={Id} />\n                                )\n                            {/* }}\n                        </Query> */}\n                    </Row>\n                </div>\n            </>\n        );\n    // }\n}\n\nexport default UserEdit;\n"]},"metadata":{},"sourceType":"module"}