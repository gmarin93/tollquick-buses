{"ast":null,"code":"var _jsxFileName = \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/index.js\";\n\n/*!\n\n=========================================================\n* Now UI Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/now-ui-dashboard.scss?v1.2.0\";\nimport \"assets/css/demo.css\";\nimport AdminLayout from \"layouts/Admin.jsx\";\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nconst timeoutLink = new ApolloLinkTimeout(10000);\nconst httpLink = createHttpLink({\n  uri: \"/graphql\"\n});\nconst hist = createBrowserHistory();\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache()\n}); //En render se envía todos los datos de metodos render como history,match,location\n//Eso significa props, ya que render actua como el component, pero refresca el componente y no lo carga de nuevo\n\nReactDOM.render(React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(Router, {\n  history: hist,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/admin\",\n  render: props => React.createElement(AdminLayout, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}), React.createElement(Redirect, {\n  to: \"/admin/dashboard\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n})))), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/index.js"],"names":["React","ReactDOM","createBrowserHistory","Router","Route","Switch","Redirect","ApolloClient","ApolloProvider","AdminLayout","InMemoryCache","timeoutLink","ApolloLinkTimeout","httpLink","createHttpLink","uri","hist","client","cache","render","props","document","getElementById"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;AAiBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,QAAhC,QAAgD,kBAAhD;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAAQC,cAAR,QAA6B,cAA7B;AAEA,OAAO,kCAAP;AACA,OAAO,0CAAP;AACA,OAAO,qBAAP;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,MAAMC,WAAW,GAAG,IAAIC,iBAAJ,CAAsB,KAAtB,CAApB;AACA,MAAMC,QAAQ,GAAGC,cAAc,CAAC;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAAD,CAA/B;AAEA,MAAMC,IAAI,GAAGd,oBAAoB,EAAjC;AAEA,MAAMe,MAAM,GAAG,IAAIV,YAAJ,CAAiB;AAC9BQ,EAAAA,GAAG,EAAC,+BAD0B;AAE9BG,EAAAA,KAAK,EAAE,IAAIR,aAAJ;AAFuB,CAAjB,CAAf,C,CAKA;AACA;;AACAT,QAAQ,CAACkB,MAAT,CACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEF,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAED,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,MAAM,EAAEI,KAAK,IAAI,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,oBAAC,QAAD;AAAU,EAAA,EAAE,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,CADA,CADF,EASEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATF","sourcesContent":["/*!\n\n=========================================================\n* Now UI Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from 'react-apollo';\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/now-ui-dashboard.scss?v1.2.0\";\nimport \"assets/css/demo.css\";\nimport AdminLayout from \"layouts/Admin.jsx\";\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nconst timeoutLink = new ApolloLinkTimeout(10000)\nconst httpLink = createHttpLink({ uri: \"/graphql\" });\n\nconst hist = createBrowserHistory();\n\nconst client = new ApolloClient({\n  uri:'http://localhost:4000/graphql',\n  cache: new InMemoryCache()\n})\n\n//En render se envía todos los datos de metodos render como history,match,location\n//Eso significa props, ya que render actua como el component, pero refresca el componente y no lo carga de nuevo\nReactDOM.render(\n  <ApolloProvider client={client}>\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Redirect to=\"/admin/dashboard\" />\n    </Switch>\n  </Router>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}