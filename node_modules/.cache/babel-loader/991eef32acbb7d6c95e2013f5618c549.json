{"ast":null,"code":"import _slicedToArray from \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/tables/Tablelist.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Table } from \"reactstrap\";\nimport { thead, tbody } from \"variables/general\";\nimport React, { useState, useEffect } from 'react';\nimport { Query } from \"react-apollo\";\nimport { graphql } from 'react-apollo';\nimport queries from 'queries/Empresas.jsx';\nimport { gql } from 'apollo-boost';\nimport uuid from 'uuid';\nimport EmpresaItem from 'components/Empresa/EmpresaItem.jsx';\nconst getEmpresas = gql(_templateObject(), queries.getEmpresasAll);\n\nfunction TablesEmpresas() {\n  // state = {\n  //     loading: true,\n  //     error: null,\n  //     modalIsOpen: false,\n  //     empresas: []\n  // };\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        NewLoading = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        NuevoError = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        modalIsOpen = _useState6[0],\n        grdModalOpen = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        empresas = _useState8[0],\n        guardarEmpresas = _useState8[1];\n\n  handleCloseModal = e => {\n    this.setState({\n      modalIsOpen: false\n    });\n    grdModalOpen(false);\n  };\n\n  handleOpenModal = e => {\n    this.setState({\n      modalIsOpen: true\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Table, {\n    key: 2,\n    responsive: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, thead.map((prop, key) => {\n    if (key === thead.length - 1) return React.createElement(\"th\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, prop);\n    return React.createElement(\"th\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, prop);\n  }))), React.createElement(Query, {\n    key: uuid(),\n    query: getEmpresas,\n    pollInterval: 600,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"loading...\");\n    if (error) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, error.message);\n    return React.createElement(\"tbody\", {\n      key: uuid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, data.empresas.map(element => {\n      return React.createElement(EmpresaItem, {\n        key: uuid(),\n        variables: element,\n        onCloseModal: handleCloseModal,\n        onOpenModal: handleOpenModal,\n        modalIsOpen: modalIsOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    }));\n  })));\n}\n\nexport default graphql(getEmpresas)(TablesEmpresas);","map":{"version":3,"sources":["/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/tables/Tablelist.jsx"],"names":["Table","thead","tbody","React","useState","useEffect","Query","graphql","queries","gql","uuid","EmpresaItem","getEmpresas","getEmpresasAll","TablesEmpresas","loading","NewLoading","error","NuevoError","modalIsOpen","grdModalOpen","empresas","guardarEmpresas","handleCloseModal","e","setState","handleOpenModal","map","prop","key","length","data","message","element"],"mappings":"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","sourcesContent":["import { Table } from \"reactstrap\";\nimport { thead, tbody } from \"variables/general\";\nimport React, { useState, useEffect } from 'react';\nimport { Query } from \"react-apollo\"\nimport { graphql } from 'react-apollo';\nimport queries from 'queries/Empresas.jsx';\nimport { gql } from 'apollo-boost'\nimport uuid from 'uuid';\nimport EmpresaItem from 'components/Empresa/EmpresaItem.jsx'\n\n\nconst getEmpresas = gql`${queries.getEmpresasAll}`;\n\nfunction TablesEmpresas(){\n\n    // state = {\n    //     loading: true,\n    //     error: null,\n    //     modalIsOpen: false,\n    //     empresas: []\n    // };\n\n    const [loading,NewLoading]=useState(true);\n    const [error,NuevoError]=useState(null);\n    const [modalIsOpen,grdModalOpen]=useState(false);\n    const [empresas,guardarEmpresas]=useState([]);\n\n\n\n    handleCloseModal = e => {\n        this.setState({ modalIsOpen: false });\n\n        grdModalOpen(false);\n      }\n    \n      handleOpenModal = e => {\n        this.setState({ modalIsOpen: true });\n      }\n    \n\n        return (\n            <>\n                <Table key={2} responsive>\n                    <thead className=\"text-primary\">\n                        <tr>\n                            {thead.map((prop, key) => {\n                                if (key === thead.length - 1)\n                                    return (\n                                        <th key={key}>\n                                            {prop}\n                                        </th>\n                                    );\n                                return <th key={key}>{prop}</th>;\n                            })}\n                        </tr>\n                    </thead>\n                    <Query key={uuid()} query={getEmpresas} pollInterval={600}>\n                        {({ loading, error, data }) => {\n\n                            if (loading) return <p>loading...</p>;\n                            if (error) return <p>{error.message}</p>;\n\n\n                            return (\n                                <tbody key={uuid()}>\n                                    {data.empresas.map((element) => {\n                                        return (\n\n                                            <EmpresaItem \n                                            key={uuid()} \n                                            variables={element}  \n                                            onCloseModal={handleCloseModal}\n                                            onOpenModal={handleOpenModal}\n                                            modalIsOpen={modalIsOpen} />\n\n                                        )\n                                    })}\n                                </tbody>\n                            )\n                        }}\n                    </Query>\n                </Table>\n            </>\n        );\n    }\n\n\nexport default graphql(getEmpresas)(TablesEmpresas);\n\n\n"]},"metadata":{},"sourceType":"module"}