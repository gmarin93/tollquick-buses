{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/tables/Tablelist.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Table } from \"reactstrap\";\nimport { thead, tbody } from \"variables/general\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { graphql } from 'react-apollo';\nimport queries from 'queries/Empresas.jsx';\nimport { gql } from 'apollo-boost';\nimport uuid from 'uuid'; // import { useQuery, useMutation, useSubscription } from \"@apollo/react-hooks\";\n\nimport { useQuery } from 'react-apollo-hooks';\nconst getEmpresas = gql(_templateObject(), queries.getEmpresas);\n\nconst showEmpresas = () => {\n  var props = this.props; // const datos=[...this.state.empresas];\n\n  const _useQuery = useQuery(getEmpresas),\n        empresas = _useQuery.empresas;\n\n  this.setState({\n    empresas\n  });\n\n  if (props) {\n    props = this.props.datos;\n    console.log('if');\n    return React.createElement(\"tbody\", {\n      key: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.props.datos.map(element => {\n      return React.createElement(\"tr\", {\n        key: uuid(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        key: element._id,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, element.nombre), React.createElement(\"th\", {\n        key: element._id,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, element.correo), React.createElement(\"th\", {\n        key: element._id,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, element.canton), React.createElement(\"th\", {\n        key: element._id,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, element.provincia));\n    }));\n  } else {\n    console.log('else');\n    console.log(this.state);\n    return React.createElement(Query, {\n      key: 3,\n      query: getEmpresas,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"loading...\");\n      if (error) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, error.message);\n      return React.createElement(\"tbody\", {\n        key: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, data.empresas.map(element => {\n        return React.createElement(\"tr\", {\n          key: element._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          key: element._id,\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, element.nombre), React.createElement(\"th\", {\n          key: element._id,\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, element.correo), React.createElement(\"th\", {\n          key: element._id,\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, element.canton), React.createElement(\"th\", {\n          key: element._id,\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, element.provincia));\n      }));\n    });\n  }\n};\n\nclass TablesEmpresas extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      error: null,\n      empresas: []\n    };\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {} // this.getData();\n  // this.fetchData();\n  // this.intervalId = setInterval(this.showEmpresas, 5000);\n  // this.intervalId = setInterval(\n  //     function () {\n  //        const {datos}=useQuery(getEmpresas)\n  //        this.setState({empresas:datos});\n  //     }, 5000\n  // )\n  // getData(){\n  //    this.intervalId = setInterval(\n  //        function () {\n  //            const {empresas}=useQuery(getEmpresas)\n  //            this.setState({empresas});\n  //            return(\n  //             <p>loading...</p>\n  //            )\n  //        }, 5000\n  //    )\n  // }\n\n\n  componentWillUnmount() {} // clearInterval(this.intervalId);\n  // showEmpresas() {\n  //     var props = this.props;\n  //     // const datos=[...this.state.empresas];\n  //     const {empresas}=useQuery(getEmpresas)\n  //     this.setState({empresas});\n  //     if (props) {\n  //         props = this.props.datos;\n  //         console.log('if');\n  //         return (\n  //             <tbody key={9}>\n  //                 {this.props.datos.map((element) => {\n  //                     return (\n  //                         <tr key={uuid()}>\n  //                             <th key={element._id} className=\"text-right\">\n  //                                 {element.nombre}\n  //                             </th>\n  //                             <th key={element._id} className=\"text-right\">\n  //                                 {element.correo}\n  //                             </th>\n  //                             <th key={element._id} className=\"text-right\">\n  //                                 {element.canton}\n  //                             </th>\n  //                             <th key={element._id} className=\"text-right\">\n  //                                 {element.provincia}\n  //                             </th>\n  //                         </tr>\n  //                     )\n  //                 })}\n  //             </tbody>\n  //         )\n  //     }\n  //     else {\n  //         console.log('else');\n  //         console.log(this.state);\n  //         return (\n  //             <Query key={3} query={getEmpresas}>\n  //                 {({ loading, error, data }) => {\n  //                     if (loading) return <p>loading...</p>;\n  //                     if (error) return <p>{error.message}</p>;\n  //                     return (\n  //                         <tbody key={9}>\n  //                             {data.empresas.map((element) => {\n  //                                 return (\n  //                                     <tr key={element._id}>\n  //                                         <th key={element._id} className=\"text-right\">\n  //                                             {element.nombre}\n  //                                         </th>\n  //                                         <th key={element._id} className=\"text-right\">\n  //                                             {element.correo}\n  //                                         </th>\n  //                                         <th key={element._id} className=\"text-right\">\n  //                                             {element.canton}\n  //                                         </th>\n  //                                         <th key={element._id} className=\"text-right\">\n  //                                             {element.provincia}\n  //                                         </th>\n  //                                     </tr>\n  //                                 )\n  //                             })}\n  //                         </tbody>\n  //                     )\n  //                 }}\n  //             </Query>\n  //         )\n  //     }\n  // }\n\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Table, {\n      key: 2,\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, thead.map((prop, key) => {\n      if (key === thead.length - 1) return React.createElement(\"th\", {\n        key: key,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, prop);\n      return React.createElement(\"th\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, prop);\n    }))), this.showEmpresas()));\n  }\n\n}\n\nexport default graphql(getEmpresas)(TablesEmpresas);","map":{"version":3,"sources":["/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/tables/Tablelist.jsx"],"names":["Table","thead","tbody","React","Query","graphql","queries","gql","uuid","useQuery","getEmpresas","showEmpresas","props","empresas","setState","datos","console","log","map","element","_id","nombre","correo","canton","provincia","state","loading","error","data","message","TablesEmpresas","Component","componentWillMount","componentDidMount","componentWillUnmount","render","prop","key","length"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,mBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,MAAMC,WAAW,GAAGH,GAAH,oBAASD,OAAO,CAACI,WAAjB,CAAjB;;AAEA,MAAMC,YAAY,GAAC,MAAM;AAErB,MAAIC,KAAK,GAAG,KAAKA,KAAjB,CAFqB,CAGrB;;AAHqB,oBAIJH,QAAQ,CAACC,WAAD,CAJJ;AAAA,QAIdG,QAJc,aAIdA,QAJc;;AAKrB,OAAKC,QAAL,CAAc;AAACD,IAAAA;AAAD,GAAd;;AAGA,MAAID,KAAJ,EAAW;AACPA,IAAAA,KAAK,GAAG,KAAKA,KAAL,CAAWG,KAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,WACI;AAAO,MAAA,GAAG,EAAE,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWG,KAAX,CAAiBG,GAAjB,CAAsBC,OAAD,IAAa;AAC/B,aAEI;AAAI,QAAA,GAAG,EAAEX,IAAI,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,GAAG,EAAEW,OAAO,CAACC,GAAjB;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,OAAO,CAACE,MADb,CADJ,EAKI;AAAI,QAAA,GAAG,EAAEF,OAAO,CAACC,GAAjB;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,OAAO,CAACG,MADb,CALJ,EASI;AAAI,QAAA,GAAG,EAAEH,OAAO,CAACC,GAAjB;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,OAAO,CAACI,MADb,CATJ,EAaI;AAAI,QAAA,GAAG,EAAEJ,OAAO,CAACC,GAAjB;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,OAAO,CAACK,SADb,CAbJ,CAFJ;AAoBH,KArBA,CADL,CADJ;AA0BH,GA7BD,MA8BK;AACDR,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKQ,KAAjB;AACA,WACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE,CAAZ;AAAe,MAAA,KAAK,EAAEf,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAAEgB,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAE3B,UAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACb,UAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,KAAK,CAACE,OAAV,CAAP;AAGX,aACI;AAAO,QAAA,GAAG,EAAE,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IAAI,CAACf,QAAL,CAAcK,GAAd,CAAmBC,OAAD,IAAa;AAC5B,eAEI;AAAI,UAAA,GAAG,EAAEA,OAAO,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,GAAG,EAAED,OAAO,CAACC,GAAjB;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,OAAO,CAACE,MADb,CADJ,EAKI;AAAI,UAAA,GAAG,EAAEF,OAAO,CAACC,GAAjB;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,OAAO,CAACG,MADb,CALJ,EASI;AAAI,UAAA,GAAG,EAAEH,OAAO,CAACC,GAAjB;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,OAAO,CAACI,MADb,CATJ,EAaI;AAAI,UAAA,GAAG,EAAEJ,OAAO,CAACC,GAAjB;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,OAAO,CAACK,SADb,CAbJ,CAFJ;AAoBH,OArBA,CADL,CADJ;AA0BH,KAjCL,CADJ;AAqCH;AACJ,CA/ED;;AAiFA,MAAMM,cAAN,SAA6B3B,KAAK,CAAC4B,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAEzCN,KAFyC,GAEjC;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJd,MAAAA,QAAQ,EAAE;AAHN,KAFiC;AAAA;;AAQzCmB,EAAAA,kBAAkB,GAAG,CAGpB;;AAEDC,EAAAA,iBAAiB,GAAG,CAYnB,CAZgB,CAEb;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAC,EAAAA,oBAAoB,GAAG,CAEtB,CAFmB,CAChB;AAGJ;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAC,EAAAA,MAAM,GAAG;AAEL,WACI,0CACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE,CAAZ;AAAe,MAAA,UAAU,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKlC,KAAK,CAACiB,GAAN,CAAU,CAACkB,IAAD,EAAOC,GAAP,KAAe;AACtB,UAAIA,GAAG,KAAKpC,KAAK,CAACqC,MAAN,GAAe,CAA3B,EACI,OACI;AAAI,QAAA,GAAG,EAAED,GAAT;AAAc,QAAA,SAAS,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IADL,CADJ;AAKJ,aAAO;AAAI,QAAA,GAAG,EAAEC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeD,IAAf,CAAP;AACH,KARA,CADL,CADJ,CADJ,EAcK,KAAKzB,YAAL,EAdL,CADJ,CADJ;AAqBH;;AArJwC;;AAwJ7C,eAAeN,OAAO,CAACK,WAAD,CAAP,CAAqBoB,cAArB,CAAf","sourcesContent":["import { Table } from \"reactstrap\";\nimport { thead, tbody } from \"variables/general\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\"\nimport { graphql } from 'react-apollo';\nimport queries from 'queries/Empresas.jsx';\nimport { gql } from 'apollo-boost'\nimport uuid from 'uuid';\n// import { useQuery, useMutation, useSubscription } from \"@apollo/react-hooks\";\nimport { useQuery } from 'react-apollo-hooks';\n\nconst getEmpresas = gql`${queries.getEmpresas}`;\n\nconst showEmpresas=() => {\n\n    var props = this.props;\n    // const datos=[...this.state.empresas];\n    const {empresas}=useQuery(getEmpresas)\n    this.setState({empresas});\n           \n\n    if (props) {\n        props = this.props.datos;\n        console.log('if');\n        return (\n            <tbody key={9}>\n                {this.props.datos.map((element) => {\n                    return (\n\n                        <tr key={uuid()}>\n                            <th key={element._id} className=\"text-right\">\n                                {element.nombre}\n                            </th>\n\n                            <th key={element._id} className=\"text-right\">\n                                {element.correo}\n                            </th>\n\n                            <th key={element._id} className=\"text-right\">\n                                {element.canton}\n                            </th>\n\n                            <th key={element._id} className=\"text-right\">\n                                {element.provincia}\n                            </th>\n                        </tr>\n                    )\n                })}\n            </tbody>\n        )\n    }\n    else {\n        console.log('else');\n        console.log(this.state);\n        return (\n            <Query key={3} query={getEmpresas}>\n                {({ loading, error, data }) => {\n\n                    if (loading) return <p>loading...</p>;\n                    if (error) return <p>{error.message}</p>;\n\n\n                    return (\n                        <tbody key={9}>\n                            {data.empresas.map((element) => {\n                                return (\n\n                                    <tr key={element._id}>\n                                        <th key={element._id} className=\"text-right\">\n                                            {element.nombre}\n                                        </th>\n\n                                        <th key={element._id} className=\"text-right\">\n                                            {element.correo}\n                                        </th>\n\n                                        <th key={element._id} className=\"text-right\">\n                                            {element.canton}\n                                        </th>\n\n                                        <th key={element._id} className=\"text-right\">\n                                            {element.provincia}\n                                        </th>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    )\n                }}\n            </Query>\n        )\n    }\n}\n\nclass TablesEmpresas extends React.Component {\n\n    state = {\n        loading: true,\n        error: null,\n        empresas: [],\n    };\n\n    componentWillMount() {\n\n\n    }\n\n    componentDidMount() {\n\n        // this.getData();\n\n        // this.fetchData();\n        // this.intervalId = setInterval(this.showEmpresas, 5000);\n        // this.intervalId = setInterval(\n        //     function () {\n        //        const {datos}=useQuery(getEmpresas)\n        //        this.setState({empresas:datos});\n        //     }, 5000\n        // )\n    }\n\n    // getData(){\n    //    this.intervalId = setInterval(\n    //        function () {\n    //            const {empresas}=useQuery(getEmpresas)\n    //            this.setState({empresas});\n    //            return(\n    //             <p>loading...</p>\n    //            )\n    //        }, 5000\n    //    )\n    // }\n\n\n    componentWillUnmount() {\n        // clearInterval(this.intervalId);\n    }\n\n    // showEmpresas() {\n\n    //     var props = this.props;\n    //     // const datos=[...this.state.empresas];\n    //     const {empresas}=useQuery(getEmpresas)\n    //     this.setState({empresas});\n               \n\n    //     if (props) {\n    //         props = this.props.datos;\n    //         console.log('if');\n    //         return (\n    //             <tbody key={9}>\n    //                 {this.props.datos.map((element) => {\n    //                     return (\n\n    //                         <tr key={uuid()}>\n    //                             <th key={element._id} className=\"text-right\">\n    //                                 {element.nombre}\n    //                             </th>\n\n    //                             <th key={element._id} className=\"text-right\">\n    //                                 {element.correo}\n    //                             </th>\n\n    //                             <th key={element._id} className=\"text-right\">\n    //                                 {element.canton}\n    //                             </th>\n\n    //                             <th key={element._id} className=\"text-right\">\n    //                                 {element.provincia}\n    //                             </th>\n    //                         </tr>\n    //                     )\n    //                 })}\n    //             </tbody>\n    //         )\n    //     }\n    //     else {\n    //         console.log('else');\n    //         console.log(this.state);\n    //         return (\n    //             <Query key={3} query={getEmpresas}>\n    //                 {({ loading, error, data }) => {\n\n    //                     if (loading) return <p>loading...</p>;\n    //                     if (error) return <p>{error.message}</p>;\n\n\n    //                     return (\n    //                         <tbody key={9}>\n    //                             {data.empresas.map((element) => {\n    //                                 return (\n\n    //                                     <tr key={element._id}>\n    //                                         <th key={element._id} className=\"text-right\">\n    //                                             {element.nombre}\n    //                                         </th>\n\n    //                                         <th key={element._id} className=\"text-right\">\n    //                                             {element.correo}\n    //                                         </th>\n\n    //                                         <th key={element._id} className=\"text-right\">\n    //                                             {element.canton}\n    //                                         </th>\n\n    //                                         <th key={element._id} className=\"text-right\">\n    //                                             {element.provincia}\n    //                                         </th>\n    //                                     </tr>\n    //                                 )\n    //                             })}\n    //                         </tbody>\n    //                     )\n    //                 }}\n    //             </Query>\n    //         )\n    //     }\n    // }\n\n\n    render() {\n\n        return (\n            <>\n                <Table key={2} responsive>\n                    <thead className=\"text-primary\">\n                        <tr>\n                            {thead.map((prop, key) => {\n                                if (key === thead.length - 1)\n                                    return (\n                                        <th key={key} className=\"text-right\">\n                                            {prop}\n                                        </th>\n                                    );\n                                return <th key={key}>{prop}</th>;\n                            })}\n                        </tr>\n                    </thead>\n                    {this.showEmpresas()}\n                    {/* <showEmpresas/> */}\n                </Table>\n            </>\n        );\n    }\n}\n\nexport default graphql(getEmpresas)(TablesEmpresas);\n\n\n"]},"metadata":{},"sourceType":"module"}