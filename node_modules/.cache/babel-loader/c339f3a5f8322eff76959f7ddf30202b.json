{"ast":null,"code":"import React, { Component, Fragment, useState } from \"react\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\ncreateNotification = props => {\n  const type = props.msg;\n  return () => {\n    switch (type) {\n      case 'info':\n        NotificationManager.info('Info message');\n        break;\n\n      case 'success':\n        NotificationManager.success('Success message', 'Registro Exitoso');\n        break;\n\n      case 'warning':\n        NotificationManager.warning('Warning message', 'No se completó el registro por falta de datos', 3000);\n        break;\n\n      case 'error':\n        NotificationManager.error('Error message', 'Datos incompletos!', 5000, () => {\n          alert('callback');\n        });\n        break;\n    }\n  };\n};\n\nexport default createNotification;","map":{"version":3,"sources":["/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/notifications/notifications.jsx"],"names":["React","Component","Fragment","useState","NotificationContainer","NotificationManager","createNotification","props","type","msg","info","success","warning","error","alert"],"mappings":"AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,QAA2D,qBAA3D;;AAGAC,kBAAkB,GAAIC,KAAD,IAAW;AAE5B,QAAMC,IAAI,GAACD,KAAK,CAACE,GAAjB;AACA,SAAO,MAAM;AACX,YAAQD,IAAR;AACE,WAAK,MAAL;AACEH,QAAAA,mBAAmB,CAACK,IAApB,CAAyB,cAAzB;AACA;;AACF,WAAK,SAAL;AACEL,QAAAA,mBAAmB,CAACM,OAApB,CAA4B,iBAA5B,EAA+C,kBAA/C;AACA;;AACF,WAAK,SAAL;AACEN,QAAAA,mBAAmB,CAACO,OAApB,CAA4B,iBAA5B,EAA+C,+CAA/C,EAAgG,IAAhG;AACA;;AACF,WAAK,OAAL;AACEP,QAAAA,mBAAmB,CAACQ,KAApB,CAA0B,eAA1B,EAA2C,oBAA3C,EAAiE,IAAjE,EAAuE,MAAM;AAC3EC,UAAAA,KAAK,CAAC,UAAD,CAAL;AACD,SAFD;AAGA;AAdJ;AAgBD,GAjBD;AAkBD,CArBH;;AAuBG,eAAeR,kBAAf","sourcesContent":["\nimport React, { Component, Fragment, useState } from \"react\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\n\ncreateNotification = (props) => {\n\n    const type=props.msg;\n    return () => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info('Info message');\n          break;\n        case 'success':\n          NotificationManager.success('Success message', 'Registro Exitoso');\n          break;\n        case 'warning':\n          NotificationManager.warning('Warning message', 'No se completó el registro por falta de datos', 3000);\n          break;\n        case 'error':\n          NotificationManager.error('Error message', 'Datos incompletos!', 5000, () => {\n            alert('callback');\n          });\n          break;\n      }\n    };\n  };\n\n   export default createNotification;"]},"metadata":{},"sourceType":"module"}