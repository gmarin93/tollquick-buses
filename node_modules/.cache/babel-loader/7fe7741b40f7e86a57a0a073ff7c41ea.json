{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/tables/Tablelist.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Table } from \"reactstrap\";\nimport { thead, tbody } from \"variables/general\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { graphql } from 'react-apollo';\nimport queries from 'queries/Empresas.jsx';\nimport { gql } from 'apollo-boost';\nconst getEmpresas = gql(_templateObject(), queries.getEmpresas);\n\nclass TablesEmpresas extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.fetchData = async () => {\n      return React.createElement(Query, {\n        query: getEmpresas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, ({\n        loading,\n        error,\n        data\n      }) => {\n        if (loading) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"loading...\");\n        if (error) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, error.message);\n        return React.createElement(\"tbody\", {\n          key: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, data.empresas.map(element => {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            key: element._id,\n            className: \"text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, element.nombre), React.createElement(\"th\", {\n            key: element._id,\n            className: \"text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, element.correo), React.createElement(\"th\", {\n            key: element._id,\n            className: \"text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, element.canton), React.createElement(\"th\", {\n            key: element._id,\n            className: \"text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, element.provincia));\n        }));\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Table, {\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, thead.map((prop, key) => {\n      if (key === thead.length - 1) return React.createElement(\"th\", {\n        key: key,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, prop);\n      return React.createElement(\"th\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, prop);\n    }))), this.fetchData()));\n  }\n\n}\n\nexport default graphql(getEmpresas)(TablesEmpresas);","map":{"version":3,"sources":["/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/tables/Tablelist.jsx"],"names":["Table","thead","tbody","React","Query","graphql","queries","gql","getEmpresas","TablesEmpresas","Component","fetchData","loading","error","data","message","empresas","map","element","_id","nombre","correo","canton","provincia","render","prop","key","length"],"mappings":"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","sourcesContent":["import { Table } from \"reactstrap\";\nimport { thead, tbody } from \"variables/general\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\"\nimport { graphql } from 'react-apollo';\nimport queries from 'queries/Empresas.jsx';\nimport { gql } from 'apollo-boost'\n\n\nconst getEmpresas = gql`${queries.getEmpresas}`;\n\nclass TablesEmpresas extends React.Component {\n\n    // componentDidMount() {\n    //     // this.fetchData();\n    //     // this.intervalId = setInterval(this.fetchData, 5000);\n    //   }\n    \n    //   componentWillUnmount() {\n    //     // clearInterval(this.intervalId);\n    //   }\n    \n      fetchData = async () => {\n\n        return (\n\n            <Query query={getEmpresas}>\n                {({ loading, error, data }) => {\n\n                    if (loading) return <p>loading...</p>;\n                    if (error) return <p>{error.message}</p>;\n                    return (\n                        <tbody key={1}>\n                            {data.empresas.map((element) => {\n                                return (\n\n                                    <tr>\n                                        <th key={element._id} className=\"text-right\">\n                                            {element.nombre}\n                                        </th>\n\n                                        <th key={element._id} className=\"text-right\">\n                                            {element.correo}\n                                        </th>\n\n                                        <th key={element._id} className=\"text-right\">\n                                            {element.canton}\n                                        </th>\n\n                                        <th key={element._id} className=\"text-right\">\n                                            {element.provincia}\n                                        </th>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    )\n                }}\n            </Query>\n        )\n    }\n\n    render() {\n        return (\n            <>\n                <Table responsive>\n                    <thead className=\"text-primary\">\n                        <tr>\n                            {thead.map((prop, key) => {\n                                if (key === thead.length - 1)\n                                    return (\n                                        <th key={key} className=\"text-right\">\n                                            {prop}\n                                        </th>\n                                    );\n                                return <th key={key}>{prop}</th>;\n                            })}\n                        </tr>\n                    </thead>\n                    {this.fetchData()}\n                </Table>\n            </>\n        );\n    }\n}\n\nexport default graphql(getEmpresas)(TablesEmpresas);\n\n\n"]},"metadata":{},"sourceType":"module"}