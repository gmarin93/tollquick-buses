{"ast":null,"code":"import _objectSpread from \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/views/UserEdit.jsx\";\n\n/*!\n\n=========================================================\n* Now UI Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, Row, Col } from \"reactstrap\"; // core components\n\nimport PanelHeader from \"components/PanelHeader/PanelHeader.jsx\";\nimport Formuser from \"components/forms/userform.jsx\";\nimport Badgeuser from \"components/badges/badgeUser\";\nimport queries from 'queries/Empresas.jsx';\nimport { Query } from \"react-apollo\";\n\nclass UserEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nombre: '',\n      usuario: '',\n      correo: '',\n      provincia: '',\n      canton: '',\n      distrito: ''\n    };\n\n    this.handleChange = e => {\n      this.setState(_objectSpread({}, this.state.form, {\n        [e.target.name]: e.target.value\n      }));\n    };\n  }\n\n  componentDidMount() {}\n\n  fetchdata() {\n    React.createElement(Query, {\n      key: uuid(),\n      query: getEmpresas,\n      pollInterval: 3000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"loading...\");\n      if (error) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, error.message);\n      return React.createElement(\"tbody\", {\n        key: uuid(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, data.empresas.map(element => {\n        return React.createElement(EmpresaItem, {\n          key: uuid(),\n          variables: element,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        });\n      }));\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(PanelHeader, {\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Formuser, {\n      onChange: this.handleChange,\n      title: 'Editar Empresa',\n      datos: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Badgeuser, {\n      datos: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default UserEdit;","map":{"version":3,"sources":["/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/views/UserEdit.jsx"],"names":["React","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","Row","Col","PanelHeader","Formuser","Badgeuser","queries","Query","UserEdit","Component","state","nombre","usuario","correo","provincia","canton","distrito","handleChange","e","setState","form","target","name","value","componentDidMount","fetchdata","uuid","getEmpresas","loading","error","data","message","empresas","map","element","render"],"mappings":";;;AAAA;;;;;;;;;;;;;;;;;AAiBA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,QAJF,EAKEC,SALF,EAMEC,IANF,EAOEC,KAPF,EAQEC,GARF,EASEC,GATF,QAUO,YAVP,C,CAYA;;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,KAAT,QAAsB,cAAtB;;AAGA,MAAMC,QAAN,SAAuBf,KAAK,CAACgB,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,SAAS,EAAE,EAJL;AAKNC,MAAAA,MAAM,EAAE,EALF;AAMNC,MAAAA,QAAQ,EAAE;AANJ,KAF6B;;AAAA,SAwCrCC,YAxCqC,GAwCxBC,CAAC,IAAE;AACd,WAAKC,QAAL,mBACa,KAAKT,KAAL,CAAWU,IADxB;AAEQ,SAACF,CAAC,CAACG,MAAF,CAASC,IAAV,GAAgBJ,CAAC,CAACG,MAAF,CAASE;AAFjC;AAKH,KA9CsC;AAAA;;AAWrCC,EAAAA,iBAAiB,GAAE,CAGlB;;AAEDC,EAAAA,SAAS,GAAG;AACV,wBAAC,KAAD;AAAO,MAAA,GAAG,EAAEC,IAAI,EAAhB;AAAoB,MAAA,KAAK,EAAEC,WAA3B;AAAwC,MAAA,YAAY,EAAE,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,CAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAG3B,UAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACb,UAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,KAAK,CAACE,OAAV,CAAP;AAGX,aACI;AAAO,QAAA,GAAG,EAAEL,IAAI,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKI,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAmBC,OAAD,IAAa;AAC5B,eAEI,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAER,IAAI,EAAtB;AAA0B,UAAA,SAAS,EAAEQ,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAKH,OANA,CADL,CADJ;AAWH,KAnBD;AAqBD;;AAUDC,EAAAA,MAAM,GAAG;AACP,WACE,0CACE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKlB,YAAzB;AAAuC,MAAA,KAAK,EAAE,gBAA9C;AAAgE,MAAA,KAAK,EAAE,KAAKP,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAKA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAFF,CADF;AAWD;;AA5DoC;;AA+DvC,eAAeF,QAAf","sourcesContent":["/*!\n\n=========================================================\n* Now UI Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport PanelHeader from \"components/PanelHeader/PanelHeader.jsx\";\nimport Formuser from \"components/forms/userform.jsx\";\nimport Badgeuser from \"components/badges/badgeUser\";\nimport queries from 'queries/Empresas.jsx';\nimport { Query } from \"react-apollo\"\n\n\nclass UserEdit extends React.Component {\n\n  state = {\n    nombre: '',\n    usuario: '',\n    correo: '',\n    provincia: '',\n    canton: '',                                               \n    distrito: '',\n  } \n\n  componentDidMount(){\n\n\n  }\n\n  fetchdata() {\n    <Query key={uuid()} query={getEmpresas} pollInterval={3000}>\n    {({ loading, error, data }) => {\n\n\n        if (loading) return <p>loading...</p>;\n        if (error) return <p>{error.message}</p>;\n\n\n        return (\n            <tbody key={uuid()}>\n                {data.empresas.map((element) => {\n                    return (\n\n                        <EmpresaItem key={uuid()} variables={element} />\n\n                    )\n                })}\n            </tbody>\n        )\n    }}\n</Query>\n  }\n\n  handleChange=e=>{\n    this.setState({\n             ... this.state.form,\n            [e.target.name]:e.target.value,\n    });\n    \n};\n\n  render() {\n    return (\n      <>\n        <PanelHeader size=\"sm\" />\n        <div className=\"content\">\n          <Row>\n            <Formuser onChange={this.handleChange} title={'Editar Empresa'} datos={this.state}/>\n            <Badgeuser datos={this.state} />\n          </Row>\n        </div>\n      </>\n    );  \n  }\n}\n\nexport default UserEdit;\n"]},"metadata":{},"sourceType":"module"}