{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/tables/Tablelist.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Table } from \"reactstrap\";\nimport { thead, tbody } from \"variables/general\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { graphql } from 'react-apollo';\nimport queries from 'queries/Empresas.jsx';\nimport { gql } from 'apollo-boost';\nimport { func } from \"prop-types\";\nconst getEmpresas = gql(_templateObject(), queries.getEmpresas);\n\nclass TablesEmpresas extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.fetchData = async () => {\n      this.setState({\n        loading: true,\n        error: null\n      });\n\n      try {\n        this.setState({\n          loading: false,\n          data: this.props.data.empresas\n        });\n      } catch (error) {\n        this.setState({\n          loading: false,\n          error: error\n        });\n      }\n    };\n\n    this.fetchData = async () => {\n      return React.createElement(Query, {\n        query: getEmpresas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, ({\n        loading,\n        error,\n        data\n      }) => {\n        if (loading) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"loading...\");\n        if (error) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, error.message);\n        return React.createElement(\"tbody\", {\n          key: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, data.empresas.map(element => {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            key: element._id,\n            className: \"text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, element.nombre), React.createElement(\"th\", {\n            key: element._id,\n            className: \"text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, element.correo), React.createElement(\"th\", {\n            key: element._id,\n            className: \"text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, element.canton), React.createElement(\"th\", {\n            key: element._id,\n            className: \"text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, element.provincia));\n        }));\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    this.intervalId = setInterval(this.fetchData, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Table, {\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, thead.map((prop, key) => {\n      if (key === thead.length - 1) return React.createElement(\"th\", {\n        key: key,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, prop);\n      return React.createElement(\"th\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, prop);\n    }))), this.fetchData()));\n  }\n\n}\n\nexport default graphql(getEmpresas)(TablesEmpresas);","map":{"version":3,"sources":["/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/tables/Tablelist.jsx"],"names":["Table","thead","tbody","React","Query","graphql","queries","gql","func","getEmpresas","TablesEmpresas","Component","fetchData","setState","loading","error","data","props","empresas","message","map","element","_id","nombre","correo","canton","provincia","componentDidMount","intervalId","setInterval","componentWillUnmount","clearInterval","render","prop","key","length"],"mappings":"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","sourcesContent":["import { Table } from \"reactstrap\";\nimport { thead, tbody } from \"variables/general\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\"\nimport { graphql } from 'react-apollo';\nimport queries from 'queries/Empresas.jsx';\nimport { gql } from 'apollo-boost'\nimport { func } from \"prop-types\";\n\nconst getEmpresas = gql`${queries.getEmpresas}`;\n\nclass TablesEmpresas extends React.Component {\n\n    componentDidMount() {\n        this.fetchData();\n        this.intervalId = setInterval(this.fetchData, 5000);\n      }\n    \n      componentWillUnmount() {\n        clearInterval(this.intervalId);\n      }\n    \n      fetchData = async () => {\n        this.setState({ loading: true, error: null });\n        try {\n          this.setState({ loading: false, data: this.props.data.empresas});\n        } catch (error) {\n          this.setState({ loading: false, error: error });\n        }\n      };\n    \n\n      fetchData = async () => {\n\n        return (\n\n            <Query query={getEmpresas}>\n                {({ loading, error, data }) => {\n\n                    if (loading) return <p>loading...</p>;\n                    if (error) return <p>{error.message}</p>;\n                    return (\n                        <tbody key={1}>\n                            {data.empresas.map((element) => {\n                                return (\n\n                                    <tr>\n                                        <th key={element._id} className=\"text-right\">\n                                            {element.nombre}\n                                        </th>\n\n                                        <th key={element._id} className=\"text-right\">\n                                            {element.correo}\n                                        </th>\n\n                                        <th key={element._id} className=\"text-right\">\n                                            {element.canton}\n                                        </th>\n\n                                        <th key={element._id} className=\"text-right\">\n                                            {element.provincia}\n                                        </th>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    )\n                }}\n            </Query>\n        )\n    }\n\n    render() {\n        return (\n            <>\n                <Table responsive>\n                    <thead className=\"text-primary\">\n                        <tr>\n                            {thead.map((prop, key) => {\n                                if (key === thead.length - 1)\n                                    return (\n                                        <th key={key} className=\"text-right\">\n                                            {prop}\n                                        </th>\n                                    );\n                                return <th key={key}>{prop}</th>;\n                            })}\n                        </tr>\n                    </thead>\n                    {this.fetchData()}\n                </Table>\n            </>\n        );\n    }\n}\n\nexport default graphql(getEmpresas)(TablesEmpresas);\n\n\n"]},"metadata":{},"sourceType":"module"}