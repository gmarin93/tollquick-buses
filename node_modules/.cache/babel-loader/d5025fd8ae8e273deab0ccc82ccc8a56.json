{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/tables/Tablelist.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Table } from \"reactstrap\";\nimport { thead, tbody } from \"variables/general\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { graphql } from 'react-apollo';\nimport queries from 'queries/Empresas.jsx';\nimport { gql } from 'apollo-boost';\nconst getEmpresas = gql(_templateObject(), queries.getEmpresas);\n\nclass TablesEmpresas extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      error: null,\n      empresas: []\n    };\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {// this.fetchData();\n    //this.intervalId = setInterval(this.fetchData, 5000);\n  }\n\n  componentWillUnmount() {} //clearInterval(this.intervalId);\n  // fetchData() {\n  //     const prueba=[];\n  //     return (\n  //     <Query key={4} query={getEmpresas}>\n  //         {({ loading, error, data }) => {\n  //     this.setState({empresas:data.empresas});\n  //         }}\n  //     </Query>\n  //     )\n  // }\n\n\n  showEmpresas() {\n    // return (\n    //     <Query key={3} query={getEmpresas}>\n    //         {({ loading, error, data }) => {\n    //             if (loading) return <p>loading...</p>;\n    //             if (error) return <p>{error.message}</p>;\n    //             return (\n    //                 <tbody key={9}>\n    //                     {data.empresas.map((element) => {\n    //                         return (\n    //                             <tr key={element._id}>\n    //                                 <th key={element._id} className=\"text-right\">\n    //                                     {element.nombre}\n    //                                 </th>\n    //                                 <th key={element._id} className=\"text-right\">\n    //                                     {element.correo}\n    //                                 </th>\n    //                                 <th key={element._id} className=\"text-right\">\n    //                                     {element.canton}\n    //                                 </th>\n    //                                 <th key={element._id} className=\"text-right\">\n    //                                     {element.provincia}\n    //                                 </th>\n    //                             </tr>\n    //                         )\n    //                     })}\n    //                 </tbody>\n    //             )\n    //         }}\n    //     </Query>\n    // )\n    const empresas = this.props.datos;\n    console.log(this.props.datos);\n    return React.createElement(\"tbody\", {\n      key: 566,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.props.datos.empresas.map(element => {\n      return React.createElement(\"tr\", {\n        key: element._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        key: element._id,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, element.nombre), React.createElement(\"th\", {\n        key: element._id,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, element.correo), React.createElement(\"th\", {\n        key: element._id,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, element.canton), React.createElement(\"th\", {\n        key: element._id,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, element.provincia));\n    }));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Table, {\n      key: 2,\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, thead.map((prop, key) => {\n      if (key === thead.length - 1) return React.createElement(\"th\", {\n        key: key,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, prop);\n      return React.createElement(\"th\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, prop);\n    }))), this.showEmpresas()));\n  }\n\n}\n\nexport default graphql(getEmpresas)(TablesEmpresas);","map":{"version":3,"sources":["/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/tables/Tablelist.jsx"],"names":["Table","thead","tbody","React","Query","graphql","queries","gql","getEmpresas","TablesEmpresas","Component","state","loading","error","empresas","componentWillMount","componentDidMount","componentWillUnmount","showEmpresas","props","datos","console","log","map","element","_id","nombre","correo","canton","provincia","render","prop","key","length"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,mBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,WAAW,GAAGD,GAAH,oBAASD,OAAO,CAACE,WAAjB,CAAjB;;AAEA,MAAMC,cAAN,SAA6BN,KAAK,CAACO,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAEzCC,KAFyC,GAEjC;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,QAAQ,EAAE;AAHN,KAFiC;AAAA;;AAQzCC,EAAAA,kBAAkB,GAAE,CAGnB;;AAEDC,EAAAA,iBAAiB,GAAG,CAEjB;AACC;AACH;;AAEDC,EAAAA,oBAAoB,GAAG,CAEtB,CAFmB,CAChB;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAC,EAAAA,YAAY,GAAG;AAEX;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEY,UAAMJ,QAAQ,GAAG,KAAKK,KAAL,CAAWC,KAA5B;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWC,KAAvB;AACK,WACI;AAAO,MAAA,GAAG,EAAE,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWC,KAAX,CAAiBN,QAAjB,CAA0BS,GAA1B,CAA+BC,OAAD,IAAa;AACxC,aAEI;AAAI,QAAA,GAAG,EAAEA,OAAO,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,GAAG,EAAED,OAAO,CAACC,GAAjB;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,OAAO,CAACE,MADb,CADJ,EAKI;AAAI,QAAA,GAAG,EAAEF,OAAO,CAACC,GAAjB;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,OAAO,CAACG,MADb,CALJ,EASI;AAAI,QAAA,GAAG,EAAEH,OAAO,CAACC,GAAjB;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,OAAO,CAACI,MADb,CATJ,EAaI;AAAI,QAAA,GAAG,EAAEJ,OAAO,CAACC,GAAjB;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,OAAO,CAACK,SADb,CAbJ,CAFJ;AAoBH,KArBA,CADL,CADJ;AA0BnB;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,0CACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE,CAAZ;AAAe,MAAA,UAAU,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK7B,KAAK,CAACsB,GAAN,CAAU,CAACQ,IAAD,EAAOC,GAAP,KAAe;AACtB,UAAIA,GAAG,KAAK/B,KAAK,CAACgC,MAAN,GAAe,CAA3B,EACI,OACI;AAAI,QAAA,GAAG,EAAED,GAAT;AAAc,QAAA,SAAS,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IADL,CADJ;AAKJ,aAAO;AAAI,QAAA,GAAG,EAAEC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeD,IAAf,CAAP;AACH,KARA,CADL,CADJ,CADJ,EAcK,KAAKb,YAAL,EAdL,CADJ,CADJ;AAoBH;;AA7HwC;;AAgI7C,eAAeb,OAAO,CAACG,WAAD,CAAP,CAAqBC,cAArB,CAAf","sourcesContent":["import { Table } from \"reactstrap\";\nimport { thead, tbody } from \"variables/general\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\"\nimport { graphql } from 'react-apollo';\nimport queries from 'queries/Empresas.jsx';\nimport { gql } from 'apollo-boost'\n\nconst getEmpresas = gql`${queries.getEmpresas}`;\n\nclass TablesEmpresas extends React.Component {\n\n    state = {\n        loading: true,\n        error: null,\n        empresas: [],\n    };\n\n    componentWillMount(){\n\n\n    }\n    \n    componentDidMount() {\n        \n       // this.fetchData();\n        //this.intervalId = setInterval(this.fetchData, 5000);\n    }\n\n    componentWillUnmount() {\n        //clearInterval(this.intervalId);\n    }\n\n    // fetchData() {\n    //     const prueba=[];\n    //     return (\n    //     <Query key={4} query={getEmpresas}>\n    //         {({ loading, error, data }) => {\n    //     this.setState({empresas:data.empresas});\n    //         }}\n    //     </Query>\n    //     )\n    // }\n\n\n    showEmpresas() {\n\n        // return (\n        //     <Query key={3} query={getEmpresas}>\n        //         {({ loading, error, data }) => {\n        //             if (loading) return <p>loading...</p>;\n        //             if (error) return <p>{error.message}</p>;\n\n\n        //             return (\n        //                 <tbody key={9}>\n        //                     {data.empresas.map((element) => {\n        //                         return (\n\n        //                             <tr key={element._id}>\n        //                                 <th key={element._id} className=\"text-right\">\n        //                                     {element.nombre}\n        //                                 </th>\n\n        //                                 <th key={element._id} className=\"text-right\">\n        //                                     {element.correo}\n        //                                 </th>\n\n        //                                 <th key={element._id} className=\"text-right\">\n        //                                     {element.canton}\n        //                                 </th>\n\n        //                                 <th key={element._id} className=\"text-right\">\n        //                                     {element.provincia}\n        //                                 </th>\n        //                             </tr>\n        //                         )\n        //                     })}\n        //                 </tbody>\n        //             )\n        //         }}\n        //     </Query>\n        // )\n\n                    const empresas = this.props.datos;\n                   console.log(this.props.datos);\n                        return (\n                            <tbody key={566}>\n                                {this.props.datos.empresas.map((element) => {\n                                    return (\n    \n                                        <tr key={element._id}>\n                                            <th key={element._id} className=\"text-right\">\n                                                {element.nombre}\n                                            </th>\n    \n                                            <th key={element._id} className=\"text-right\">\n                                                {element.correo}\n                                            </th>\n    \n                                            <th key={element._id} className=\"text-right\">\n                                                {element.canton}\n                                            </th>\n    \n                                            <th key={element._id} className=\"text-right\">\n                                                {element.provincia}\n                                            </th>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        )\n    }\n\n    render() {\n        return (\n            <>\n                <Table key={2} responsive>\n                    <thead className=\"text-primary\">\n                        <tr>\n                            {thead.map((prop, key) => {\n                                if (key === thead.length - 1)\n                                    return (\n                                        <th key={key} className=\"text-right\">\n                                            {prop}\n                                        </th>\n                                    );\n                                return <th key={key}>{prop}</th>;\n                            })}\n                        </tr>\n                    </thead>\n                    {this.showEmpresas()}\n                </Table>\n            </>\n        );\n    }\n}\n\nexport default graphql(getEmpresas)(TablesEmpresas);\n\n\n"]},"metadata":{},"sourceType":"module"}