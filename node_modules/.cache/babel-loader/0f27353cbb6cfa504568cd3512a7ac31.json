{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/tables/Tablelist.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Table } from \"reactstrap\";\nimport { thead, tbody } from \"variables/general\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { graphql } from 'react-apollo';\nimport queries from 'queries/Empresas.jsx';\nimport { gql } from 'apollo-boost';\nimport { func } from \"prop-types\";\nconst getEmpresas = gql(_templateObject(), queries.getEmpresas);\n\nclass TablesEmpresas extends React.Component {\n  showEmpresas() {\n    const data = this.props.empresadata; // return data.data.map((prop, key) => {\n\n    return React.createElement(Query, {\n      query: getEmpresas,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"loading...\");\n      if (error) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, error.message);\n      return React.createElement(\"tbody\", {\n        key: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, data.map(func), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        key: prop._id,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, console.log(data)), React.createElement(\"th\", {\n        key: prop._id,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, prop.correo), React.createElement(\"th\", {\n        key: prop._id,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, prop.canton), React.createElement(\"th\", {\n        key: prop._id,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, prop.provincia)));\n    }); // })\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Table, {\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, thead.map((prop, key) => {\n      if (key === thead.length - 1) return React.createElement(\"th\", {\n        key: key,\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, prop);\n      return React.createElement(\"th\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, prop);\n    }))), this.showEmpresas()));\n  }\n\n}\n\nexport default graphql(getEmpresas)(TablesEmpresas); // export default TablesEmpresas;","map":{"version":3,"sources":["/home/gmarin/Software/TollQuick/fontend2/now-ui-dashboard-react-master/src/components/tables/Tablelist.jsx"],"names":["Table","thead","tbody","React","Query","graphql","queries","gql","func","getEmpresas","TablesEmpresas","Component","showEmpresas","data","props","empresadata","loading","error","message","map","prop","_id","console","log","correo","canton","provincia","render","key","length"],"mappings":"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","sourcesContent":["import { Table } from \"reactstrap\";\nimport { thead, tbody } from \"variables/general\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\"\nimport { graphql } from 'react-apollo';\nimport queries from 'queries/Empresas.jsx';\nimport {gql} from 'apollo-boost'\nimport { func } from \"prop-types\";\n\nconst getEmpresas= gql`${queries.getEmpresas}`;\n\nclass TablesEmpresas extends React.Component {\n\n    showEmpresas() {\n        const data = (this.props.empresadata)\n        // return data.data.map((prop, key) => {\n            return (\n\n                <Query query={getEmpresas}>\n                    {({ loading, error, data }) => {\n\n                    if (loading) return <p>loading...</p>;\n                    if (error) return <p>{error.message}</p>;\n                      return(\n                          <tbody key={1}>\n                              {data.map(func)}\n                                <tr>    \n                                    <th key={prop._id} className=\"text-right\">\n                                        {console.log(data)\n                                        }\n                                    </th>\n    \n    \n                                    <th key={prop._id} className=\"text-right\">\n                                        {prop.correo}\n                                    </th>\n    \n                                    <th key={prop._id} className=\"text-right\">\n                                        {prop.canton}\n                                    </th>\n    \n                                    <th key={prop._id} className=\"text-right\">\n                                        {prop.provincia}\n                                    </th>\n                                </tr>\n                            </tbody>\n                      )\n                    }}\n                </Query>\n            )\n       // })\n    }\n\n    render() {\n        return (\n            <>\n                <Table responsive>\n                    <thead className=\"text-primary\">\n                        <tr>\n                            {thead.map((prop, key) => {\n                                if (key === thead.length - 1)\n                                    return (\n                                        <th key={key} className=\"text-right\">\n                                            {prop}\n                                        </th>\n                                    );\n                                return <th key={key}>{prop}</th>;\n                            })}\n                        </tr>\n                    </thead>\n                    {this.showEmpresas()}\n                </Table>\n            </>\n        );\n    }\n}\n\nexport default graphql(getEmpresas)(TablesEmpresas);\n// export default TablesEmpresas;\n\n"]},"metadata":{},"sourceType":"module"}